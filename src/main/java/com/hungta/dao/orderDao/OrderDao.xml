<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hungta.dao.orderDao.OrderDao">

    <cache/>

    <resultMap id="BaseResultMap" type="com.hungta.entity.Order">
        <id column="orderId" jdbcType="VARCHAR" property="orderId" />
        <result column="quantity" jdbcType="INTEGER" property="quantity" />
        <result column="price" jdbcType="INTEGER" property="price" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="customerId" jdbcType="VARCHAR" property="customerId" />
        <result column="customerName" jdbcType="VARCHAR" property="customerName" />
        <result column="orderDate" jdbcType="VARCHAR" property="orderDate" />
        <result column="total" jdbcType="INTEGER" property="total" />
        <result column="orderName" jdbcType="VARCHAR" property="orderName" />
        <result column="status" jdbcType="VARCHAR" property="status" />
    </resultMap>

    <sql id="Base_Column_List" >
       orderId, productName, quantity, price, type, customerId, customerName, orderDate, total, orderName, status
    </sql>

    <select id="findAll" resultType="Order">
        SELECT
        <include refid="Base_Column_List" />
        FROM orders
    </select>


    <select id="findByOrderName" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from orders
        where orderName = #{orderName,jdbcType=VARCHAR}
        LIMIT 1
    </select>

    <select id="findByOrderId" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from orders
        where orderId = #{orderId,jdbcType=VARCHAR}
    </select>

    <insert id="createOrder" parameterType="com.hungta.entity.Order" >
        insert into orders (orderId, productName, quantity,
        price, type, customerId, customerName, orderDate,
        total, orderName, status
        )
        values (#{orderId,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, #{quantity,jdbcType=INTEGER},
        #{price,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{customerId,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR},
        #{orderDate,jdbcType=VARCHAR}, #{total,jdbcType=INTEGER}, #{orderName,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}
        )
    </insert>

    <delete id="deleteOrder" parameterType="java.lang.String" >
        delete from orders
        where orderId = #{orderId,jdbcType=VARCHAR}
    </delete>

    <update id="updateOrder" parameterType="com.hungta.entity.Order" >
        update orders
        set
        productName = #{productName,jdbcType=VARCHAR},
        quantity = #{quantity,jdbcType=INTEGER},
        price = #{price,jdbcType=INTEGER},
        type = #{type,jdbcType=VARCHAR},
        customerId = #{customerId,jdbcType=VARCHAR},
        customerName = #{customerName,jdbcType=VARCHAR},
        orderDate = #{orderDate,jdbcType=VARCHAR},
        total = #{total,jdbcType=INTEGER},
        status = #{status,jdbcType=VARCHAR}
        where orderId = #{orderId,jdbcType=VARCHAR}
    </update>

</mapper>